/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project3_1;

import java.util.ArrayList;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author User
 */
public class DynamicSearch extends javax.swing.JFrame {

    /**
     * Creates new form DynamicSearch
     */
    
    private ArrayList<Integer> searchContentsU = new ArrayList();
    private ArrayList<Integer> searchContentsV = new ArrayList();
    private int searchBy = 0;
    private int search = 0;
    private Statement statement;
    

    public DynamicSearch() {
        initComponents();
        setSearchOpt();
        connectDB();
    }
    
    public void setArrayListU(ArrayList<Integer> sc){
        searchContentsU = sc;
        Collections.sort(searchContentsU);
    }
    public void setArrayListV(ArrayList<Integer> sc){
        searchContentsV = sc;
        Collections.sort(searchContentsV);
    }
    
    public void setSearchBy(int sb){
        searchBy = sb;
        setSearchOpt();
    }
    
    public void setSearch(int s){
        search = s;
        setSearchOpt();
    }
    
    public void setSearchOpt(){
        jComboBoxSearchUserName.setVisible(searchBy == 0 && search == 0);
        jComboBoxSearchUserID.setVisible(searchBy == 1 && search == 0);
        jComboBoxSearchVehicleName.setVisible(searchBy == 0 && search == 1);
        jComboBoxSearchVehicleID.setVisible(searchBy == 1 && search == 1);
    }
    
    public Statement getConnection(){
        return statement;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSearch = new javax.swing.JButton();
        jLabelSearchResult = new javax.swing.JLabel();
        jButtonView = new javax.swing.JButton();
        jLabelTableSearch = new javax.swing.JLabel();
        jComboBoxTable = new javax.swing.JComboBox<>();
        jComboBoxSearchUserName = new javax.swing.JComboBox<>();
        jComboBoxSearchUserID = new javax.swing.JComboBox<>();
        jButtonFilter = new javax.swing.JButton();
        jComboBoxSearchVehicleName = new javax.swing.JComboBox<>();
        jComboBoxSearchVehicleID = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(720, 450));
        setMinimumSize(new java.awt.Dimension(720, 450));
        setPreferredSize(new java.awt.Dimension(720, 450));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 92, 30));

        jLabelSearchResult.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabelSearchResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSearchResult.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(jLabelSearchResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 60, 680, 340));

        jButtonView.setText("View");
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonView, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 460, 122, 43));

        jLabelTableSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelTableSearch.setText("Select Table To Perform");
        getContentPane().add(jLabelTableSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 420, 200, 30));

        jComboBoxTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User", "Vehicle" }));
        jComboBoxTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTableActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 420, 150, 30));

        jComboBoxSearchUserName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxSearchUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchUserNameActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxSearchUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 200, 30));

        jComboBoxSearchUserID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxSearchUserID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchUserIDActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxSearchUserID, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 200, 30));

        jButtonFilter.setText("Filter");
        jButtonFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, 92, 30));

        jComboBoxSearchVehicleName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxSearchVehicleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchVehicleNameActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxSearchVehicleName, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 200, 30));

        jComboBoxSearchVehicleID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxSearchVehicleID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchVehicleIDActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxSearchVehicleID, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 200, 30));

        setSize(new java.awt.Dimension(1013, 580));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewActionPerformed
        
        new TableFrame(jComboBoxTable.getSelectedIndex()).setVisible(true);
        System.out.println(jComboBoxTable.getSelectedIndex());
        this.dispose();
    }//GEN-LAST:event_jButtonViewActionPerformed

    private void jComboBoxTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTableActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        String condition = "", c_key = "", table = "";
        if(searchBy == 0 && search == 0){
            condition = jComboBoxSearchUserName.getSelectedItem().toString();
            c_key = "u_name";
            table = "user_info";
        }
        else if(searchBy == 1 && search == 0){
            condition = jComboBoxSearchUserID.getSelectedItem().toString();
            c_key = "u_username";
            table = "user_info";
        }
        else if(searchBy == 0 && search == 1){
            condition = jComboBoxSearchVehicleName.getSelectedItem().toString();
            c_key = "v.md_name";
            table = "vehicles v full join model m on v.md_name=m.md_name full JOIN engine e ON m.en_name = e.en_name Inner join fuels f on e.f_name=f.f_name"; 
        }
        else{
            condition = jComboBoxSearchVehicleID.getSelectedItem().toString();
            c_key = "v_id";
            table = "vehicles v full join model m on v.md_name=m.md_name full JOIN engine e ON m.en_name = e.en_name Inner join fuels f on e.f_name=f.f_name";   
        }
        
        ArrayList<String> jStr = new ArrayList();
        ArrayList<String> keys = new ArrayList();
        
        ArrayList<String> userInfo = new ArrayList(Arrays.asList("u_username", "u_name", "u_age","u_approved"));
        ArrayList<String> vehicleInfo = new ArrayList(Arrays.asList("v_id", "v_color", "v.md_name", "c_f_amount", "m.en_name", "md_type", "t_f_amount", "f.f_name", "f_price"));
        
        if (search == 0) {
            if(searchContentsU.isEmpty()) {
                jStr.add("User Name: "); jStr.add("Name: "); jStr.add("Age: "); jStr.add("Total Distance: ");
                jStr.add("Total Fuel Used: "); jStr.add("Approved: ");

                keys.add("u_username");keys.add("u_name"); keys.add("u_age"); keys.add("SUM(d_distance) as 'Total Distance'");
                keys.add("SUM(f_amount) as 'Total Fuel'"); keys.add("u_approved");         
            } 
            for(int value : searchContentsU){
                switch(value){
                    case 1: jStr.add("User Name: "); keys.add("u_username"); break;
                    case 2: jStr.add("Name: ");  keys.add("u_name"); break;
                    case 3: jStr.add("Age: ");  keys.add("u_age"); break;
                    case 4: jStr.add("Total Distance: ");  keys.add("SUM(d_distance) as 'Total Distance'"); break;
                    case 5: jStr.add("Total Fuel Used: "); keys.add("SUM(f_amount) as 'Total Fuel'"); break;
                    case 6: jStr.add("Approved: "); keys.add("u_approved"); break;
                    default: break;
                }
            } 
        }
        
        else if (search == 1) {
            if(searchContentsV.isEmpty()) {
                jStr.add("ID: "); jStr.add("Color: "); jStr.add("Model Name: "); jStr.add("Model Type: "); jStr.add("Fuel Name: ");
                jStr.add("Capacity: "); jStr.add("Fuel Amount: "); jStr.add("Fuel Price: "); jStr.add("Engine Name: ");
                
                keys.add("v_id");keys.add("v_color");keys.add("v.md_name");keys.add("md_type");
                keys.add("f.f_name");keys.add("t_f_amount");keys.add("c_f_amount");keys.add("f_price");
                keys.add("m.en_name");;           
            } 
            for(int value : searchContentsV){
                switch(value){
                    case 1: jStr.add("ID: "); keys.add("v_id"); break;
                    case 2: jStr.add("Color: ");  keys.add("v_color"); break;
                    case 3: jStr.add("Model Name: ");  keys.add("v.md_name"); break;
                    case 4: jStr.add("Model Type: ");  keys.add("md_type"); break;
                    case 5: jStr.add("Fuel Name: "); keys.add("f.f_name"); break;
                    case 6: jStr.add("Capacity: "); keys.add("t_f_amount"); break;
                    case 7: jStr.add("Fuel Amount: "); keys.add("c_f_amount"); break;
                    case 8: jStr.add("Fuel Price: "); keys.add("f_price"); break;
                    case 9: jStr.add("Engine Name: "); keys.add("m.en_name"); break;
                    default: break;
                }
            }
            
        }
        
        ResultSet resultSet;
        String labeltxt = "<html>";
        
        int counter = -1;
        for (String key : keys){
            counter++;
            try {
                if(search == 0 && (key.equals("SUM(d_distance) as 'Total Distance'") || key.equals("SUM(f_amount) as 'Total Fuel'"))){
                    if(searchBy == 0){
                        resultSet = statement.executeQuery("SELECT u_username FROM user_info where u_name='" + condition + "'");
                        String temp = "";
                        while(resultSet.next())
                            temp = resultSet.getString("u_username");
                        resultSet = statement.executeQuery("SELECT " + key + " FROM drives WHERE u_username='" + temp + "'");
                    }
                    else
                        resultSet = statement.executeQuery("SELECT " + key + " FROM drives WHERE " + c_key + "='" + condition + "'");
                }
                else
                    resultSet = statement.executeQuery("SELECT " + key + " FROM "+ table +" WHERE " + c_key + "='" + condition + "'");
                
                
                if(search == 1) {
                    String temp_key = "";
                    if (key.equals("v.md_name")) temp_key = "md_name";
                    else if(key.equals("f.f_name")) temp_key = "f_name";
                    else if(key.equals("m.en_name")) temp_key = "en_name";
                    else{
                        while(resultSet.next())
                            labeltxt += (jStr.get(counter)+ resultSet.getString(key) + "<br>"); 
                        continue;
                    }
                    while(resultSet.next())
                        labeltxt += (jStr.get(counter)+ resultSet.getString(temp_key) + "<br>");
                    continue;
                }
                
                if(search == 0) {
                    String temp_key = "";
                    if (key.equals("SUM(d_distance) as 'Total Distance'")) temp_key = "Total Distance";
                    else if(key.equals("SUM(f_amount) as 'Total Fuel'")) temp_key = "Total Fuel";
                    else{
                        while(resultSet.next())
                            labeltxt += (jStr.get(counter)+ resultSet.getString(key) + "<br>"); 
                        continue;
                    }
                    while(resultSet.next())
                        labeltxt += (jStr.get(counter)+ resultSet.getString(temp_key) + "<br>");
                    continue;
                }
                
                while(resultSet.next())
                    labeltxt += (jStr.get(counter)+ resultSet.getString(key) + "<br>"); 
                
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        labeltxt += "</html>";
        jLabelSearchResult.setText(labeltxt);
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jComboBoxSearchUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchUserNameActionPerformed

    private void jComboBoxSearchUserIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchUserIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchUserIDActionPerformed

    private void jButtonFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterActionPerformed
        new FilterFrame(searchBy, search, searchContentsU, searchContentsV, this).setVisible(true);
    }//GEN-LAST:event_jButtonFilterActionPerformed

    private void jComboBoxSearchVehicleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchVehicleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchVehicleNameActionPerformed

    private void jComboBoxSearchVehicleIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchVehicleIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchVehicleIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DynamicSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DynamicSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DynamicSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DynamicSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DynamicSearch().setVisible(true);
        });
    }
    
    private void connectDB() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=projectdb1;selectMethod=cursor", "sa", "123456");
            
            statement = connection.createStatement();
            
            ResultSet resultSet = statement.executeQuery("SELECT u_username FROM user_info");
            
            while (resultSet.next()) {
                jComboBoxSearchUserID.addItem( resultSet.getString("u_username"));
            }
            
            resultSet = statement.executeQuery("SELECT u_name FROM user_info");
            
            while (resultSet.next()) {
                jComboBoxSearchUserName.addItem(resultSet.getString("u_name"));
            }
            
            
            resultSet = statement.executeQuery("SELECT v_id FROM vehicles");
            
            while (resultSet.next()) {
                jComboBoxSearchVehicleID.addItem( resultSet.getString("v_id"));
            }
            
            resultSet = statement.executeQuery("SELECT md_name FROM vehicles");
            
            while (resultSet.next()) {
                jComboBoxSearchVehicleName.addItem(resultSet.getString("md_name"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFilter;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonView;
    private javax.swing.JComboBox<String> jComboBoxSearchUserID;
    private javax.swing.JComboBox<String> jComboBoxSearchUserName;
    private javax.swing.JComboBox<String> jComboBoxSearchVehicleID;
    private javax.swing.JComboBox<String> jComboBoxSearchVehicleName;
    private javax.swing.JComboBox<String> jComboBoxTable;
    private javax.swing.JLabel jLabelSearchResult;
    private javax.swing.JLabel jLabelTableSearch;
    // End of variables declaration//GEN-END:variables
}
